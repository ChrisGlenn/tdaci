	# engage the player
	if player_spotted:
		# set the target position for the ray
		# check if it's hitting anything that isn't the player and if not then create a path and chase the player
		# needs to check if player is in the enemies line of sight...
		RAY.target_position = to_local(Globals.player_position)
		if RAY.is_colliding():
			var collider = RAY.get_collider()
			if collider.is_in_group("PLAYER"):
				if current_path.is_empty():
					var id_path = astar_grid.get_id_path(
						tilemap.local_to_map(self.global_position),
						tilemap.local_to_map(Globals.player_position)
					).slice(1) # remove the enemies current position
					current_path = id_path
					engaged = true # the player has been ENGAGED
					player_spotted = false
				else:
					# if the player moves then update the path
					pass
	else:
		if !current_path.is_empty():
			# move towards the player!!!
			if movement_inc > 0:
				movement_inc -= Globals.timer_ctrl * delta # decrement timer
			else:
				var target_position = tilemap.map_to_local(current_path.front()) # get the target position
				self.global_position = Vector2(target_position.x - 8, target_position.y - 12) # move the enemy to the position
				current_path.pop_front() # remove the current target position
				print(current_path)
				movement_inc = movement_rec # reset the timer
		if player_out_of_range:
			# count down the timer and if the player hasn't been found then return to the
			# original spot of the enemy IF they are not there to chase the player
			pass
